{"version":3,"file":"slider.js","sources":["../../../../../../src/material/slider/slider.ts","../../../../../../src/material/slider/slider-module.ts","../../../../../../src/material/slider/public-api.ts","../../../../../../src/material/slider/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACC;AACC;AAEF;AAAI;AACC;AAGJ;;;;;;;AAmDD,MAAM,kBAAkB,GAAG,+BAA+B,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;AAE7E;AACC;AACC;AACC;AACH,MAAM,wBAAwB,GAAG,EAAE,CAAC;AAEpC;AACA,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAE7B;AACA,MAAM,6BAA6B,GAAG,CAAC,CAAC;AAExC;AACA,MAAM,0BAA0B,GAAG,EAAE,CAAC;AAEtC;AACC;AACC;AACC;AAEH;AAAK,MAAQ,yBAAyB,GAAQ;AAC7C,IAAC,OAAO,EAAE,iBAAiB;AAC3B,IAAC,WAAW,EAAE,UAAU,CAAC,MAAM,SAAS,CAAC;AACzC,IAAC,KAAK,EAAE,IAAI;AACZ,EAAC;AAEF;AACC,MAAY,eAAe;AAC3B,CAKA;AAED;AACA;AACA,MAAM,cAAc,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC;AAC7D,IAAC,YAAmB,WAAuB;AAC5C,QADqB,gBAAW,GAAX,WAAW,CAAY;AAAE,KAAE;AAC/C,CAAA,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEf;AACC;AACC;AACC;AACC,MAkDS,SAAU,SAAQ,cAAc;AAC1C,IAuVD,YAAY,UAAsB,EACd,aAA2B,EAC3B,kBAAqC,EACzB,IAAoB,EACjB,QAAgB,EAC/B,OAAe,EACL,SAAc,EACkB,cAAuB;AACtF,QAAG,KAAK,CAAC,UAAU,CAAC,CAAC;AACrB,QARqB,kBAAa,GAAb,aAAa,CAAc;AACjD,QAAsB,uBAAkB,GAAlB,kBAAkB,CAAmB;AAC3D,QAAkC,SAAI,GAAJ,IAAI,CAAgB;AACtD,QACsB,YAAO,GAAP,OAAO,CAAQ;AACrC,QACgE,mBAAc,GAAd,cAAc,CAAS;AAAE,QAvV/E,YAAO,GAAG,KAAK,CAAC;AAE1B,QAUU,SAAI,GAAW,GAAG,CAAC;AAE7B,QAUU,SAAI,GAAW,CAAC,CAAC;AAE3B,QAaU,UAAK,GAAW,CAAC,CAAC;AAE5B,QAIU,gBAAW,GAAY,KAAK,CAAC;AAEvC,QAeU,kBAAa,GAAoB,CAAC,CAAC;AAE7C,QA0BU,WAAM,GAAkB,IAAI,CAAC;AAEvC,QAgBU,cAAS,GAAG,KAAK,CAAC;AAE5B;AACO,QAAc,WAAM,GAAkC,IAAI,YAAY,EAAmB,CAAC;AAEjG;AACO,QAAc,UAAK,GAAkC,IAAI,YAAY,EAAmB,CAAC;AAEhG;AACO;AACO;AAEZ;AACoB;AAAa,QAAd,gBAAW,GAAgC,IAAI,YAAY,EAAiB,CAAC;AAElG;AACoC,QA4BlC,cAAS,GAAc,SAAQ,CAAC;AAElC,QAEU,aAAQ,GAAW,CAAC,CAAC;AAE/B;AACO;AACO;AAEC;AAAa,QAA1B,eAAU,GAAkC,IAAI,CAAC;AAEnD;AACO;AACO;AAEC;AAAa,QAA1B,cAAS,GAAY,KAAK,CAAC;AAE7B;AAE+B,QAoHrB,yBAAoB,GAAW,CAAC,CAAC;AAE3C;AACO,QAAG,sBAAiB,GAAsB,IAAI,CAAC;AAEtD,QAAU,kCAA6B,GAAyB,SAAQ,CAAC;AAEzE;AACS,QAGC,2BAAsB,GAAG,YAAY,CAAC,KAAK,CAAC;AAEtD;AACY,QAkKF,iBAAY,GAAG,CAAC,KAA8B;AACvD;AACS;AACS,YAAf,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;AACzF,gBAAK,OAAO;AACZ,aAAI;AAEL,YAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;AACpB,gBAAK,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC;AACxC,oBAAS,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC;AAChF,gBAAK,MAAM,eAAe,GAAG,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE7E,gBAAM,IAAI,eAAe,EAAE;AAC1B,oBAAO,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,oBAAO,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AACnC,oBAAO,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACtC,oBAAO,KAAK,CAAC,cAAc,EAAE,CAAC;AAC9B,oBAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,oBAAO,IAAI,CAAC,aAAa,EAAE,CAAC;AAC5B,oBAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACrC,oBAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChC,oBAAO,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;AACtD,oBAAO,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;AAE3C;AACa,oBAAL,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACnC,wBAAS,IAAI,CAAC,eAAe,EAAE,CAAC;AAChC,qBAAQ;AACR,iBAAM;AACN,aAAI,CAAC,CAAC;AACN,SAAE,CAAA;AAEH;AACO;AACO;AAEC;AAAa,QAAlB,iBAAY,GAAG,CAAC,KAA8B;AACvD,YAAG,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;AACtC,gBAAK,MAAM,eAAe,GAAG,wBAAwB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE7E,gBAAM,IAAI,eAAe,EAAE;AAC1B;AACa,oBAAN,KAAK,CAAC,cAAc,EAAE,CAAC;AAC9B,oBAAO,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,oBAAO,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACtC,oBAAO,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;AAEvD;AACa,oBAAL,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACnC,wBAAS,IAAI,CAAC,eAAe,EAAE,CAAC;AAChC,qBAAQ;AACR,iBAAM;AACN,aAAI;AACJ,SAAE,CAAA;AAEH;AACO,QAAG,eAAU,GAAG,CAAC,KAA8B;AACrD,YAAG,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;AACtC,gBAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ;AAClE;AACW;AACW,oBAAb,iBAAiB,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;AACjE,oBAAO,KAAK,CAAC,cAAc,EAAE,CAAC;AAC9B,oBAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAClC,oBAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC9B,oBAAO,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAElC,oBAAQ,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACpE,wBAAS,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACjC,qBAAQ;AAET,oBAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAC/D,iBAAM;AACN,aAAI;AACJ,SAAE,CAAA;AAEH;AACO,QAAG,gBAAW,GAAG;AACvB;AACS;AACS,YAAf,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAC/B,gBAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC7C,aAAI;AACJ,SAAE,CAAA;AAEH,QA5MI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,QAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAE5C,QAAI,OAAO,CAAC,iBAAiB,CAAC;AAC7B,YAAK,MAAM,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC;AAC9C,YAAK,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AAClF,YAAK,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACnF,SAAI,CAAC,CAAC;AACN,KAAE;AAEH;AACsB,IAzWpB,IACI,MAAM,KAAc,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;AAC/C,IAAC,IAAI,MAAM,CAAC,KAAc;AAC1B,QAAG,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAE;AACF;AAE4B,IAC3B,IACI,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;AACxC,IAAC,IAAI,GAAG,CAAC,CAAS;AAClB,QAAG,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,QAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAE3D;AACK,QAAD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC1C,KAAE;AACF;AAEyB,IACxB,IACI,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;AACxC,IAAC,IAAI,GAAG,CAAC,CAAS;AAClB,QAAG,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,QAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAE3D;AACK,QAAD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC1C,KAAE;AACF;AAEwB,IACvB,IACI,IAAI,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AAC1C,IAAC,IAAI,IAAI,CAAC,CAAS;AACnB,QAAG,IAAI,CAAC,KAAK,GAAG,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAErD,QAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;AAC7B,YAAK,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAG,CAAC,MAAM,CAAC;AAC3E,SAAI;AAEL;AACK,QAAD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC1C,KAAE;AACF;AAEsB,IACrB,IACI,UAAU,KAAc,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE;AACvD,IAAC,IAAI,UAAU,CAAC,KAAc,IAAI,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;AACpF;AAAS;AAGgD;AACM;AAAS,IAEvE,IACI,YAAY,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE;AAClD,IAAC,IAAI,YAAY,CAAC,KAAsB;AACxC,QAAG,IAAI,KAAK,KAAK,MAAM,EAAE;AACzB,YAAK,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;AACjC,SAAI;AAAE,aAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACtE,YAAK,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,aAAuB,CAAC,CAAC;AACpF,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC5B,SAAI;AACJ,KAAE;AACF;AAAiC,IAGhC,IACI,KAAK;AAAM;AAC2E,QACxF,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAC7B,YAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,SAAI;AACJ,QAAG,OAAO,IAAI,CAAC,MAAgB,CAAC;AAChC,KAAE;AACF,IAAC,IAAI,KAAK,CAAC,CAAS;AACpB,QAAG,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAK,IAAI,KAAK,GAAG,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAE7C;AACO;AACO,YAAR,IAAI,IAAI,CAAC,eAAe,IAAI,KAAK,KAAK,IAAI,CAAC,GAAG,IAAI,KAAK,KAAK,IAAI,CAAC,GAAG,EAAE;AAC3E,gBAAO,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;AAC/D,aAAM;AAEP,YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACzB,YAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAE7D;AACO,YAAD,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC5C,SAAI;AACJ,KAAE;AACF;AAEG,IAWF,IACI,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;AACnD,IAAC,IAAI,QAAQ,CAAC,KAAc;AAC5B,QAAG,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACjD,KAAE;AACF;AAEyB,IAcxB,IAAI,YAAY;AAAM,QACpB,IAAI,IAAI,CAAC,WAAW,EAAE;AACzB;AACO;AACO,YAAT,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAM,CAAC,CAAC;AAC1C,SAAI;AAEL;AACK;AACK;AACK,QAAX,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;AACnE,YAAK,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACrD,SAAI;AAEL,QAAI,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;AAC1B,KAAE;AAEH;AACG,IAAD,KAAK,CAAC,OAAsB;AAC7B,QAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACnC,KAAE;AAEH;AACG,IAAD,IAAI;AACL,QAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC3B,KAAE;AAEH;AAAwE,IAItE,IAAI,OAAO,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;AAC7D;AAAS;AAGa;AACiB;AAAS,IAc/C,iBAAiB;AAClB;AACK;AACK,QAAP,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACrD,KAAE;AAEH;AAEE,IAAA,WAAW;AACZ,QAAG,OAAO,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC;AAC7B,KAAE;AAEH;AACG;AACG;AAEH;AAAS,IAAV,YAAY;AACb,QAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;AACtB,YAAK,OAAO,kBAAkB,CAAC;AAC/B,SAAI;AACJ,QAAG,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC/C,YAAK,OAAO,IAAI,CAAC,SAAS,GAAG,0BAA0B,GAAG,6BAA6B,CAAC;AACxF,SAAI;AACJ,QAAG,OAAO,CAAC,CAAC;AACZ,KAAE;AAEH;AACG,IAAD,yBAAyB;AAAM,QAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AAC1C,QAAG,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,QAAQ,CAAC;AAC3F,QAAG,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AAE5D,QAAI,OAAO;AACV;AACO,YAAF,SAAS,EAAE,YAAY,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,eAAe,KAAK,GAAG;AACrF,SAAI,CAAC;AACL,KAAE;AAEH;AACG,IAAD,mBAAmB;AAAM,QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAChC,QAAG,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AAC1C,QAAG,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,MAAM,OAAO,KAAK,GAAG,GAAG,OAAO,QAAQ,CAAC;AACzE,QAAG,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;AAE5D,QAAI,OAAO;AACV;AACO,YAAF,SAAS,EAAE,YAAY,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,eAAe,KAAK,GAAG;AACrF;AACO;AACO;AACO;AACO,YAAvB,OAAO,EAAE,OAAO,KAAK,CAAC,GAAG,MAAM,GAAG,EAAE;AACzC,SAAI,CAAC;AACL,KAAE;AAEH;AACG,IAAD,wBAAwB;AAAM,QAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AACxC;AACK;AACK,QAAP,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;AACzE,QAAG,IAAI,MAAM,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,GAAG,GAAG,CAAC;AACpD,QAAG,OAAO;AACV,YAAK,WAAW,EAAE,YAAY,IAAI,IAAI,IAAI,GAAG,MAAM,IAAI;AACvD,SAAI,CAAC;AACL,KAAE;AAEH;AACG,IAAD,eAAe;AAAM,QACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;AAClD,QAAG,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ,GAAG,GAAG,GAAG,QAAQ,OAAO,CAAC;AAChF,QAAG,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AACxC;AACK;AACK;AACK,QAAZ,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;AACzE,QAAG,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,GAAG,iBAAiB,GAAG,EAAE,CAAC;AACzF,QAAG,IAAI,MAAM,GAA8B;AAC3C,YAAK,gBAAgB,EAAE,cAAc;AACrC;AACO,YAAF,WAAW,EAAE,0BAA0B,IAAI,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,KAAK,MAAM,EAAE;AACpF,SAAI,CAAC;AAEN,QAAI,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;AAClD,YAAK,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACvD,YAAK,IAAI,IAAY,CAAC;AAEvB,YAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACxB,gBAAO,IAAI,GAAG,gBAAgB,GAAG,QAAQ,GAAG,KAAK,CAAC;AAClD,aAAM;AAAE,iBAAI;AACZ,gBAAO,IAAI,GAAG,gBAAgB,GAAG,OAAO,GAAG,MAAM,CAAC;AAClD,aAAM;AAEP,YAAM,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC;AAC3D,SAAI;AAEL,QAAI,OAAO,MAAM,CAAC;AACjB,KAAE;AAEH,IAAE,wBAAwB;AAAM,QAC5B,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACrD,QAAG,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AACxC;AACK;AACK,QAAP,IAAI,YAAY,GACZ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAChG,QAAG,IAAI,MAAM,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;AACvE,QAAG,OAAO;AACV,YAAK,WAAW,EAAE,YAAY,IAAI,KAAK,MAAM,IAAI;AACjD,SAAI,CAAC;AACL,KAAE;AAEH;AAAS;AACqB;AAGD;AAAS,IAoBpC,wBAAwB;AACzB,QAAG,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACrD,QAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACnG,KAAE;AAEH;AACG,IAAO,aAAa;AACtB,QAAG,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC;AAClE,KAAE;AAEH,IAkCE,eAAe;AAChB,QAAG,IAAI,CAAC,aAAa;AACrB,aAAQ,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;AACvC,aAAQ,SAAS,CAAC,CAAC,MAAmB;AACtC,YAAS,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,MAAM,IAAI,MAAM,KAAK,UAAU,CAAC;AAC5D,YAAS,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AACjD,SAAQ,CAAC,CAAC;AACV,QAAG,IAAI,IAAI,CAAC,IAAI,EAAE;AAClB,YAAK,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;AAC9D,gBAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC9C,aAAM,CAAC,CAAC;AACR,SAAI;AACJ,KAAE;AAEH,IAAE,WAAW;AACZ,QAAG,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAClD,QAAG,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACnF,QAAG,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACpF,QAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACjC,QAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC9B,QAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvD,QAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC7C,KAAE;AAEH,IAAE,aAAa;AACd,QAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;AACtB,YAAK,OAAO;AACZ,SAAI;AAEL;AACK;AACK,QAAN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACxD,QAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACrC,KAAE;AAEH,IAAE,QAAQ;AACT;AACK;AACK,QAAP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACxD,QAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACrC,KAAE;AAEH,IAAE,OAAO;AACR,QAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AACpB,KAAE;AAEH,IAAE,UAAU,CAAC,KAAoB;AAChC,QAAG,IAAI,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,KAAK,CAAC;AAC7C,aAAQ,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,EAAE;AAC5D,YAAK,OAAO;AACZ,SAAI;AAEL,QAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAEhC,QAAI,QAAQ,KAAK,CAAC,OAAO;AACxB,YAAK,KAAK,OAAO;AACjB,gBAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AAC3B,gBAAO,MAAM;AACb,YAAK,KAAK,SAAS;AACnB,gBAAO,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5B,gBAAO,MAAM;AACb,YAAK,KAAK,GAAG;AACb,gBAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC7B,gBAAO,MAAM;AACb,YAAK,KAAK,IAAI;AACd,gBAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC7B,gBAAO,MAAM;AACb,YAAK,KAAK,UAAU;AACpB;AACS;AACS;AACS;AACS;AACS;AACS;AACS,gBAAxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/D,gBAAO,MAAM;AACb,YAAK,KAAK,QAAQ;AAClB,gBAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1B,gBAAO,MAAM;AACb,YAAK,KAAK,WAAW;AACrB;AACS,gBAAF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/D,gBAAO,MAAM;AACb,YAAK,KAAK,UAAU;AACpB,gBAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,gBAAO,MAAM;AACb,YAAK;AACL;AACS;AAEP,gBADK,OAAO;AACd,SAAI;AAEL,QAAI,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AAC/B,YAAK,IAAI,CAAC,eAAe,EAAE,CAAC;AAC5B,YAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,SAAI;AAEL,QAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAChC,QAAG,KAAK,CAAC,cAAc,EAAE,CAAC;AAC1B,KAAE;AAEH,IAAE,QAAQ;AACT,QAAG,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;AACvC,YAAK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC5B,SAAI;AACJ,KAAE;AAEH;AAC6B,IAsFnB,UAAU;AAAM,QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,MAAM,CAAC;AAC/C,KAAE;AAEH;AACG;AACG;AACG;AAEH;AAAS,IAAL,iBAAiB,CAAC,YAAqC;AAChE;AACK;AACK,QAAP,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AACnC,QAAG,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;AAC9C,QAAG,MAAM,aAAa,GAAG,OAAO,GAAG,WAAW,GAAG,WAAW,CAAC;AAC7D,QAAG,MAAM,YAAY,GAAG,OAAO,GAAG,UAAU,GAAG,SAAS,CAAC;AACzD,QAAG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACnF,QAAG,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;AAEjF,QAAI,IAAI,OAAO,EAAE;AAChB,YAAK,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;AACnF,SAAI;AAEL,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAErC,QAAI,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,EAAE;AAChD,YAAK,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACvD,SAAI;AACJ,KAAE;AAEH;AACG,IAAO,mBAAmB;AAC5B,QAAG,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AACnC,QAAG,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACpF,QAAG,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;AAChF,QAAG,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;AACpF,QAAG,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;AACjF,QAAG,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;AAErF,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAErC,QAAI,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,EAAE;AAChD,YAAK,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1D,SAAI;AACJ,KAAE;AAEH;AACG,IAAO,UAAU,CAAC,QAAgB;AACpC,QAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1F,KAAE;AAEH;AACG,IAAO,wBAAwB,CAAC,GAA2B;AAC7D,QAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAChC,YAAK,OAAO;AACZ,SAAI;AAEL,QAAI,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;AACzF,QAAG,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAC3F,QAAG,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAErD;AACK,QAAD,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC;AAE9D,QAAI,IAAI,IAAI,CAAC,wBAAwB,EAAE,EAAE;AACxC,YAAK,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC;AAC3B,SAAI;AAEL;AACK;AACK;AACK;AACK,QAAhB,IAAI,OAAO,KAAK,CAAC,EAAE;AACtB,YAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC3B,SAAI;AAAE,aAAI,IAAI,OAAO,KAAK,CAAC,EAAE;AAC7B,YAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AAC3B,SAAI;AAAE,aAAI;AACV,YAAK,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAEvD;AACO;AACO,YAAR,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;AAElG;AACO,YAAD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAChE,SAAI;AACJ,KAAE;AAEH;AACG,IAAO,gBAAgB;AACzB,QAAG,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClD,QAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,QAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC/C,KAAE;AAEH;AACG,IAAO,eAAe;AACxB,QAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC9C,KAAE;AAEH;AACG,IAAO,0BAA0B;AACnC,QAAG,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AACtD,YAAK,OAAO;AACZ,SAAI;AAEL,QAAI,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;AACpC,YAAK,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AAClG,YAAK,IAAI,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACvE,YAAK,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,GAAG,aAAa,CAAC,CAAC;AAC5E,YAAK,IAAI,aAAa,GAAG,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;AAClD,YAAK,IAAI,CAAC,oBAAoB,GAAG,aAAa,GAAG,SAAS,CAAC;AAC3D,SAAI;AAAE,aAAI;AACV,YAAK,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACvF,SAAI;AACJ,KAAE;AAEH;AACG,IAAO,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AAAK,QAChD,IAAI,KAAK,GAAG,IAAI,eAAe,EAAE,CAAC;AAEtC,QAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AACvB,QAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AAExB,QAAI,OAAO,KAAK,CAAC;AAChB,KAAE;AAEH;AACG,IAAO,oBAAoB,CAAC,KAAoB;AAClD,QAAG,OAAO,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5D,KAAE;AAEH;AACG,IAAO,eAAe,CAAC,UAAkB;AAC3C,QAAG,OAAO,IAAI,CAAC,GAAG,GAAG,UAAU,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACxD,KAAE;AAEH;AACG,IAAO,MAAM,CAAC,KAAa,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AAC/C,QAAG,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AAC9C,KAAE;AAEH;AACG;AACG;AACG;AAEH;AAAS,IAAL,oBAAoB;AAC7B,QAAG,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,qBAAqB,EAAE,GAAG,IAAI,CAAC;AACjG,KAAE;AAEH;AACG;AACG;AAEH;AAAS,IAAF,iBAAiB,CAAC,OAAsB;AACjD,QAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACjD,KAAE;AAEH;AACG,IAAO,gBAAgB;AACzB,QAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AACzC,KAAE;AAEH;AACG;AACG;AAEH;AAAS,IAAV,UAAU,CAAC,KAAU;AACtB,QAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,KAAE;AAEH;AACG;AACG;AACG;AAEH;AAAS,IAAb,gBAAgB,CAAC,EAAwB;AAC1C,QAAG,IAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;AAC3C,KAAE;AAEH;AACG;AACG;AACG;AAEH;AAAS,IAAb,iBAAiB,CAAC,EAAO;AAC1B,QAAG,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACvB,KAAE;AAEH;AACG;AACG;AACG;AAEH;AAAS,IAAb,gBAAgB,CAAC,UAAmB;AACrC,QAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC9B,KAAE;AAEH;uCAvyBC,SAAS,SAAC,mBACT,QAAQ,EAAE,YAAY,mBACtB,QAAQ,EAAE,WAAW,mBACrB,SAAS,EAAE,CAAC,yBAAyB,CAAC,mBACtC,IAAI,EAAE,uBACJ,SAAS,EAAE,YAAY,uBACvB,QAAQ,EAAE,WAAW,uBACrB,WAAW,EAAE,oBAAoB,uBACjC,SAAS,EAAE,YAAY,uBACvB;KAAc,EAAE,iBAAiB;;;;OAIjC,eAAe,EAAE,yBAAyB,uBAC1C,OAAO,EAAE;oBAAgC,uBACzC,MAAM,EAAE,QAAQ,uBAChB,YAAY,EAAE,UAAU,uBACxB,sBAAsB,EAAE,UAAU;qBAClC,sBAAsB,EAAE,KAAK,uBAC7B,sBAAsB,EAAE,KAAK,uBAC7B,sBAAsB,EAAE,OAAO;;;8EAO/B,uBAAuB,EAAE,8CAA8C,uBACvE,yBAAyB,EAAE,sCAAsC,uBACjE;YAA6B,EAAE,UAAU,uBACzC,8BAA8B,EAAE,cAAc,uBAC9C,+BAA+B,EAAE,WAAW,uBAC5C,kCAAkC,EAAE,qBAAqB,yNAGzD,wCAAwC,EAAE,4BAA4B,uBACtE,4BAA4B,EAAE,YAAY;AAC1C,wCAAwC,EAAE,YAAY,uBACtD,6BAA6B,EAAE,UAAU,uBACzC,8BAA8B,EAAE,eAAe,uBAC/C,mCAAmC,EAC/B,oEAAoE,uBACxE,iCAAiC,EAAE,qCAAqC,oBACzE,mBACD;;;;;;oCAA0B;WAE1B,MAAM,EAAE,CAAC,UAAU,EAAE;AAAO,EAAE,UAAU,CAAC;CACzC,aAAa,EAAE,iBAAiB,CAAC,IAAI;aACrC,eAAe,EAAE;cAAuB,CAAC,MAAM;;;;;;;;;;;;;;;;;;;;;mhOAChD,43BACK;AAAE;AAAoC,YA5H1C,UAAU;AACT,YAzBK,YAAY;AAAK,YAsBvB,iBAAiB;AAChB,YAtBK,cAAc,uBA8eP,QAAQ;AAAQ,yCAChB,SAAS,SAAC,UAAU;AAAU,YA9c3C,MAAM;AACL,4CA+cY,MAAM,SAAC,QAAQ;AAAU,yCACzB,QAAQ,YAAI,MAAM,SAAC,qBAAqB;AAAS;AAAI;AAC7D,qBA7VJ,KAAK;AACL,kBAOA,KAAK;AACL,kBAWA,KAAK;AACL,mBAWA,KAAK;AACL,yBAcA,KAAK;AACL,2BAQA,KAAK;AACL,oBAaA,KAAK;AACL,0BA+BA,KAAK;AAAM,wBAGX,KAAK;AAAM,uBAGX,KAAK;AACL,qBAOA,MAAM;AAAM,oBAGZ,MAAM;AAAM,0BAOZ,MAAM;AAAM,6BAwLZ,SAAS,SAAC,eAAe;AAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAwcrC;AACA,SAAS,YAAY,CAAC,KAA8B;AAAK;AACiB;AACE;AACpB,IACtD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AAC/B,CAAC;AAED;AACA,SAAS,wBAAwB,CAAC,KAA8B,EAAE,EAAoB;AACrF,IAAC,IAAI,KAAmD,CAAC;AAE1D,IAAE,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;AAC1B;AACK;AACK;AACK,QAAZ,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;AAC/B,YAAK,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;AACjG,SAAI;AAAE,aAAI;AACV;AACO,YAAF,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AACzD,SAAI;AACJ,KAAE;AAAE,SAAI;AACR,QAAG,KAAK,GAAG,KAAK,CAAC;AACjB,KAAE;AAEH,IAAE,OAAO,KAAK,GAAG,EAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAC,GAAG,SAAS,CAAC;AAClE,CAAC;AAED;AACA,SAAS,iBAAiB,CAAC,OAAkB,EAAE,EAAU;AAAK,IAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,KAAK,EAAE,EAAE;AACrC,YAAK,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AACvB,SAAI;AACJ,KAAE;AAEH,IAAE,OAAO,SAAS,CAAC;AACnB,CAAC;AAGD;AACA,SAAS,mBAAmB,CAAC,KAAiB,EAAE,UAAuB;AAAK,IAC1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,QAAG,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAqB,CAAC;AAE1D,QAAI,IAAI,UAAU,KAAK,MAAM,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC7D,YAAK,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;AACxC,SAAI;AACJ,KAAE;AAEH,IAAE,OAAO,SAAS,CAAC;AACnB;AACC;ACl9BD;AACC;AACC;AAEF;AAAI;AACC;AAGJ;AAAK,MAWO,eAAe;AAC5B;6CANC,QAAQ,SAAC,mBACR,OAAO,EAAE,CAAC;EAAY,EAAE,eAAe,CAAC,mBACxC,OAAO,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;MACrC,YAAY,EAAE,CAAC,SAAS,CAAC,gBAC1B;;;;;;;;;2SACK;AAAE;ACnBR;AACC;AACC;AAEF;AAAI;AACC;AAGJ;AAAK;ACRN;AACC;AACC;AAEA;AAAE;AACsD","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n  AfterViewInit,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanDisable,\n  HasTabIndex,\n  mixinColor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription} from 'rxjs';\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number | null;\n}\n\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n  constructor(public _elementRef: ElementRef) {}\n}), 'accent'));\n\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n@Component({\n  selector: 'mat-slider',\n  exportAs: 'matSlider',\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n\n    // On Safari starting to slide temporarily triggers text selection mode which\n    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n    '(selectstart)': '$event.preventDefault()',\n    'class': 'mat-slider mat-focus-indicator',\n    'role': 'slider',\n    '[tabIndex]': 'tabIndex',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n\n    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n    // to the same value that we set on the slider's thumb which will be truncated.\n    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n    // Class binding which is only used by the test harness as there is no other\n    // way for the harness to detect if mouse coordinates need to be inverted.\n    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue()',\n    '[class.mat-slider-hide-last-tick]':\n        'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlider extends _MatSliderBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, AfterViewInit, HasTabIndex {\n  /** Whether the slider is inverted. */\n  @Input()\n  get invert(): boolean { return this._invert; }\n  set invert(value: boolean) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  private _invert = false;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _max: number = 100;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _min: number = 0;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number { return this._step; }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _step: number = 1;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean { return this._thumbLabel; }\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\n  private _thumbLabel: boolean = false;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() { return this._tickInterval; }\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: 'auto' | number = 0;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value as number;\n  }\n  set value(v: number) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v, 0);\n\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal && value !== this.min && value !== this.max) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _value: number | null = null;\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** Text corresponding to the slider's value. Used primarily for improved accessibility. */\n  @Input() valueText: string;\n\n  /** Whether the slider is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical = false;\n\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  /** The value to be used for display purposes. */\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value!);\n    }\n\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  /** set focus to the host element */\n  focus(options?: FocusOptions) {\n    this._focusHostElement(options);\n  }\n\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /** The percentage of the slider that coincides with the value. */\n  get percent(): number { return this._clamp(this._percent); }\n  private _percent: number = 0;\n\n  /**\n   * Whether or not the thumb is sliding and what the user is using to slide it with.\n   * Used to determine if there should be a transition for the thumb and fill track.\n   */\n  _isSliding: 'keyboard' | 'pointer' | null = null;\n\n  /**\n   * Whether or not the slider is active (clicked or sliding).\n   * Used to shrink and grow the thumb as according to the Material Design spec.\n   */\n  _isActive: boolean = false;\n\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  _shouldInvertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n\n  /** Whether the slider is at its minimum value. */\n  _isMinValue() {\n    return this.percent === 0;\n  }\n\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  _getThumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue() && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n\n  /** CSS styles for the track background element. */\n  _getTrackBackgroundStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the track fill element. */\n  _getTrackFillStyles(): { [key: string]: string } {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n\n  /** CSS styles for the ticks container element. */\n  _getTicksContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n\n  /** CSS styles for the ticks element. */\n  _getTicksStyles(): { [key: string]: string } {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue() && this._getThumbGap()) {\n      const shouldInvertAxis = this._shouldInvertAxis();\n      let side: string;\n\n      if (this.vertical) {\n        side = shouldInvertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = shouldInvertAxis ? 'Right' : 'Left';\n      }\n\n      styles[`padding${side}`] = `${this._getThumbGap()}px`;\n    }\n\n    return styles;\n  }\n\n  _getThumbContainerStyles(): { [key: string]: string } {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset =\n        (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n\n  /** The size of a tick interval as a percentage of the size of the track. */\n  private _tickIntervalPercent: number = 0;\n\n  /** The dimensions of the slider. */\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** Decimal places to round to, based on the step amount. */\n  private _roundToDecimal: number;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** The value of the slider when the slide start event fires. */\n  private _valueOnSlideStart: number | null;\n\n  /** Reference to the inner slider wrapper element. */\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\n\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    const shouldInvertAxis = this._shouldInvertAxis();\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n  }\n\n  /** The language direction for this slider element. */\n  private _getDirection() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n\n  /** Keeps track of the last pointer event that was captured by the slider. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n\n  /** Used to subscribe to global move and end events */\n  protected _document: Document;\n\n  /**\n   * Identifier used to attribute a touch event to a particular slider.\n   * Will be undefined if one of the following conditions is true:\n   * - The user isn't dragging using a touch device.\n   * - The browser doesn't support `Touch.identifier`.\n   * - Dragging hasn't started yet.\n   */\n  private _touchId: number | undefined;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Attribute('tabindex') tabIndex: string,\n              private _ngZone: NgZone,\n              @Inject(DOCUMENT) _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._document = _document;\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    _ngZone.runOutsideAngular(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor\n        .monitor(this._elementRef, true)\n        .subscribe((origin: FocusOrigin) => {\n          this._isActive = !!origin && origin !== 'keyboard';\n          this._changeDetectorRef.detectChanges();\n        });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (this.disabled || hasModifierKey(event) ||\n        (this._isSliding && this._isSliding !== 'keyboard')) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = 'keyboard';\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    if (this._isSliding === 'keyboard') {\n      this._isSliding = null;\n    }\n  }\n\n  /** Called when the user has put their pointer down on the slider. */\n  private _pointerDown = (event: TouchEvent | MouseEvent) => {\n    // Don't do anything if the slider is disabled or the\n    // user is using anything other than the main mouse button.\n    if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._ngZone.run(() => {\n      this._touchId = isTouchEvent(event) ?\n          getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n      const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n      if (pointerPosition) {\n        const oldValue = this.value;\n        this._isSliding = 'pointer';\n        this._lastPointerEvent = event;\n        event.preventDefault();\n        this._focusHostElement();\n        this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n        this._bindGlobalEvents(event);\n        this._focusHostElement();\n        this._updateValueFromPosition(pointerPosition);\n        this._valueOnSlideStart = oldValue;\n\n        // Emit a change and input event if the value changed.\n        if (oldValue != this.value) {\n          this._emitInputEvent();\n        }\n      }\n    });\n  }\n\n  /**\n   * Called when the user has moved their pointer after\n   * starting to drag. Bound on the document level.\n   */\n  private _pointerMove = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding === 'pointer') {\n      const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n\n      if (pointerPosition) {\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        const oldValue = this.value;\n        this._lastPointerEvent = event;\n        this._updateValueFromPosition(pointerPosition);\n\n        // Native range elements always emit `input` events when the value changed while sliding.\n        if (oldValue != this.value) {\n          this._emitInputEvent();\n        }\n      }\n    }\n  }\n\n  /** Called when the user has lifted their pointer. Bound on the document level. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding === 'pointer') {\n      if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n          // Note that we use `changedTouches`, rather than `touches` because it\n          // seems like in most cases `touches` is empty for `touchend` events.\n          findMatchingTouch(event.changedTouches, this._touchId)) {\n        event.preventDefault();\n        this._removeGlobalEvents();\n        this._isSliding = null;\n        this._touchId = undefined;\n\n        if (this._valueOnSlideStart != this.value && !this.disabled) {\n          this._emitChangeEvent();\n        }\n\n        this._valueOnSlideStart = this._lastPointerEvent = null;\n      }\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    return this._document.defaultView || window;\n  }\n\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n    if (isTouch) {\n      document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    const document = this._document;\n    document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  private _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  /** Emits a change event if the current value is different from the last emitted value. */\n  private _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  /** Emits an input event when the current value is different from the last emitted value. */\n  private _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  private _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(value = this.value): MatSliderChange {\n    let event = new MatSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  /** Calculates the percentage of the slider that a value is. */\n  private _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  /** Calculates the value a percentage of the slider corresponds to. */\n  private _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  /** Return a number between two numbers. */\n  private _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  private _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  private _focusHostElement(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the native element. */\n  private _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_invert: BooleanInput;\n  static ngAcceptInputType_max: NumberInput;\n  static ngAcceptInputType_min: NumberInput;\n  static ngAcceptInputType_step: NumberInput;\n  static ngAcceptInputType_thumbLabel: BooleanInput;\n  static ngAcceptInputType_tickInterval: NumberInput;\n  static ngAcceptInputType_value: NumberInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event: MouseEvent | TouchEvent, id: number|undefined) {\n  let point: {clientX: number, clientY: number}|undefined;\n\n  if (isTouchEvent(event)) {\n    // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n    // If that's the case, attribute the first touch to all active sliders. This should still cover\n    // the most common case while only breaking multi-touch.\n    if (typeof id === 'number') {\n      point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n    } else {\n      // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n      point = event.touches[0] || event.changedTouches[0];\n    }\n  } else {\n    point = event;\n  }\n\n  return point ? {x: point.clientX, y: point.clientY} : undefined;\n}\n\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches: TouchList, id: number): Touch | undefined {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n\n  return undefined;\n}\n\n\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event: TouchEvent, sliderHost: HTMLElement): number | undefined {\n  for (let i = 0; i < event.touches.length; i++) {\n    const target = event.touches[i].target as HTMLElement;\n\n    if (sliderHost === target || sliderHost.contains(target)) {\n      return event.touches[i].identifier;\n    }\n  }\n\n  return undefined;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatSlider} from './slider';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n})\nexport class MatSliderModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './slider-module';\nexport * from './slider';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}