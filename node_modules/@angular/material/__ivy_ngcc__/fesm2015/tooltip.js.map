{"version":3,"file":"tooltip.js","sources":["../../../../../../src/material/tooltip/tooltip-animations.ts","../../../../../../src/material/tooltip/tooltip.ts","../../../../../../src/material/tooltip/tooltip-module.ts","../../../../../../src/material/tooltip/public-api.ts","../../../../../../src/material/tooltip/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({opacity: 0, transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n      style({opacity: 0, transform: 'scale(0)', offset: 0}),\n      style({opacity: 0.5, transform: 'scale(0.99)', offset: 0.5}),\n      style({opacity: 1, transform: 'scale(1)', offset: 1})\n    ]))),\n    transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  VerticalConnectionPos,\n  ConnectionPositionPair,\n} from '@angular/cdk/overlay';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Observable, Subject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\n\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\n/** Possible positions for a tooltip. */\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/**\n * Options for how the tooltip trigger should handle touch gestures.\n * See `MatTooltip.touchGestures` for more information.\n */\nexport type TooltipTouchGestures = 'auto' | 'on' | 'off';\n\n/** Possible visibility states of a tooltip. */\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\nconst PANEL_CLASS = 'tooltip-panel';\n\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n  touchGestures?: TooltipTouchGestures;\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\n      providedIn: 'root',\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500,\n  };\n}\n\n\n@Directive()\nexport abstract class _MatTooltipBase<T extends _TooltipComponentBase> implements OnDestroy,\n  AfterViewInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: T | null;\n\n  private _portal: ComponentPortal<T>;\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n  private _scrollStrategy: () => ScrollStrategy;\n  private _viewInitialized = false;\n  private _pointerExitEventsInitialized = false;\n  protected abstract readonly _tooltipComponent: ComponentType<T>;\n  protected _viewportMargin = 8;\n  private _currentPosition: TooltipPosition;\n  protected readonly _cssClassPrefix: string = 'mat';\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition(this._overlayRef);\n        this._tooltipInstance?.show(0);\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay: number = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay: number = this._defaultOptions.hideDelay;\n\n  /**\n   * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n   * uses a long press gesture to show and hide, however it can conflict with the native browser\n   * gestures. To work around the conflict, Angular Material disables native gestures on the\n   * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n   * elements). The different values for this option configure the touch event handling as follows:\n   * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n   *   browser gestures on particular elements. In particular, it allows text selection on inputs\n   *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n   * - `on` - Enables touch gestures for all elements and disables native\n   *   browser gestures with no exceptions.\n   * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n   *   showing on touch devices.\n   */\n  @Input('matTooltipTouchGestures') touchGestures: TooltipTouchGestures = 'auto';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n    // away the string-conversion: https://github.com/angular/components/issues/20684\n    this._message = value != null ? String(value).trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._setupPointerEnterEventsIfNeeded();\n      this._updateTooltipMessage();\n      this._ngZone.runOutsideAngular(() => {\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        Promise.resolve().then(() => {\n          this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n        });\n      });\n    }\n  }\n  private _message = '';\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  /** Manually-bound passive event listeners. */\n  private readonly _passiveListeners:\n      (readonly [string, EventListenerOrEventListenerObject])[] = [];\n\n  /** Reference to the current document. */\n  private _document: Document;\n\n  /** Timer started at the last `touchstart` event. */\n  private _touchstartTimeout: number;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    scrollStrategy: any,\n    protected _dir: Directionality,\n    private _defaultOptions: MatTooltipDefaultOptions,\n    @Inject(DOCUMENT) _document: any) {\n\n    this._scrollStrategy = scrollStrategy;\n    this._document = _document;\n\n    if (_defaultOptions) {\n      if (_defaultOptions.position) {\n        this.position = _defaultOptions.position;\n      }\n\n      if (_defaultOptions.touchGestures) {\n        this.touchGestures = _defaultOptions.touchGestures;\n      }\n    }\n\n    _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (this._overlayRef) {\n        this._updatePosition(this._overlayRef);\n      }\n    });\n\n    _ngZone.runOutsideAngular(() => {\n      _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n    });\n  }\n\n  ngAfterViewInit() {\n    // This needs to happen after view init so the initial values for all inputs have been set.\n    this._viewInitialized = true;\n    this._setupPointerEnterEventsIfNeeded();\n\n    this._focusMonitor.monitor(this._elementRef)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(origin => {\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this._ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this._ngZone.run(() => this.show());\n        }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    const nativeElement = this._elementRef.nativeElement;\n\n    clearTimeout(this._touchstartTimeout);\n\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    nativeElement.removeEventListener('keydown', this._handleKeydown);\n    this._passiveListeners.forEach(([event, listener]) => {\n      nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n    });\n    this._passiveListeners.length = 0;\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n    this._focusMonitor.stopMonitoring(nativeElement);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance!._showTimeoutId && !this._tooltipInstance!._hideTimeoutId)) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n    this._detach();\n    this._portal = this._portal ||\n       new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /**\n   * Handles the keydown events on the host element.\n   * Needs to be an arrow function so that we can use it in addEventListener.\n   */\n  private _handleKeydown = (event: KeyboardEvent) => {\n    if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this._ngZone.run(() => this.hide(0));\n    }\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n                         .withFlexibleDimensions(false)\n                         .withViewportMargin(this._viewportMargin)\n                         .withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      this._updateCurrentPositionClass(change.connectionPair);\n\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._updatePosition(this._overlayRef);\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    this._overlayRef.outsidePointerEvents()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition(overlayRef: OverlayRef) {\n    const position = overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      this._addOffset({...origin.main, ...overlay.main}),\n      this._addOffset({...origin.fallback, ...overlay.fallback})\n    ]);\n  }\n\n  /** Adds the configured offset to a position. Used as a hook for child classes. */\n  protected _addOffset(position: ConnectedPosition): ConnectedPosition {\n    return position;\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position == 'above' || position == 'below') {\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(originPosition!.originX, originPosition!.originY);\n\n    return {\n      main: originPosition!,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position == 'above') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position == 'below') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      position == 'before' ||\n      (position == 'left' && isLtr) ||\n      (position == 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      position == 'after' ||\n      (position == 'right' && isLtr) ||\n      (position == 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getMatTooltipInvalidPositionError(position);\n    }\n\n    const {x, y} = this._invertPosition(overlayPosition!.overlayX, overlayPosition!.overlayY);\n\n    return {\n      main: overlayPosition!,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n\n  /** Updates the class on the overlay panel based on the current position of the tooltip. */\n  private _updateCurrentPositionClass(connectionPair: ConnectionPositionPair): void {\n    const {overlayY, originX, originY} = connectionPair;\n    let newPosition: TooltipPosition;\n\n    // If the overlay is in the middle along the Y axis,\n    // it means that it's either before or after.\n    if (overlayY === 'center') {\n      // Note that since this information is used for styling, we want to\n      // resolve `start` and `end` to their real values, otherwise consumers\n      // would have to remember to do it themselves on each consumption.\n      if (this._dir && this._dir.value === 'rtl') {\n        newPosition = originX === 'end' ? 'left' : 'right';\n      } else {\n        newPosition = originX === 'start' ? 'left' : 'right';\n      }\n    } else {\n      newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n    }\n\n    if (newPosition !== this._currentPosition) {\n      const overlayRef = this._overlayRef;\n\n      if (overlayRef) {\n        const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n        overlayRef.removePanelClass(classPrefix + this._currentPosition);\n        overlayRef.addPanelClass(classPrefix + newPosition);\n      }\n\n      this._currentPosition = newPosition;\n    }\n  }\n\n  /** Binds the pointer events to the tooltip trigger. */\n  private _setupPointerEnterEventsIfNeeded() {\n    // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n    if (this._disabled || !this.message || !this._viewInitialized ||\n        this._passiveListeners.length) {\n      return;\n    }\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (this._platformSupportsMouseEvents()) {\n      this._passiveListeners\n          .push(['mouseenter', () => {\n            this._setupPointerExitEventsIfNeeded();\n            this.show();\n          }]);\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n\n      this._passiveListeners\n          .push(['touchstart', () => {\n            // Note that it's important that we don't `preventDefault` here,\n            // because it can prevent click events from firing on the element.\n            this._setupPointerExitEventsIfNeeded();\n            clearTimeout(this._touchstartTimeout);\n            this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n          }]);\n    }\n\n    this._addListeners(this._passiveListeners);\n  }\n\n  private _setupPointerExitEventsIfNeeded() {\n    if (this._pointerExitEventsInitialized) {\n      return;\n    }\n    this._pointerExitEventsInitialized = true;\n\n    const exitListeners: (readonly [string, EventListenerOrEventListenerObject])[] = [];\n    if (this._platformSupportsMouseEvents()) {\n      exitListeners.push(\n        ['mouseleave', () => this.hide()],\n        ['wheel', event => this._wheelListener(event as WheelEvent)]\n      );\n    } else if (this.touchGestures !== 'off') {\n      this._disableNativeGesturesIfNecessary();\n      const touchendListener = () => {\n        clearTimeout(this._touchstartTimeout);\n        this.hide(this._defaultOptions.touchendHideDelay);\n      };\n\n      exitListeners.push(\n        ['touchend', touchendListener],\n        ['touchcancel', touchendListener],\n      );\n    }\n\n    this._addListeners(exitListeners);\n    this._passiveListeners.push(...exitListeners);\n  }\n\n  private _addListeners(\n      listeners: (readonly [string, EventListenerOrEventListenerObject])[]) {\n    listeners.forEach(([event, listener]) => {\n      this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n    });\n  }\n\n  private _platformSupportsMouseEvents() {\n    return !this._platform.IOS && !this._platform.ANDROID;\n  }\n\n  /** Listener for the `wheel` event on the element. */\n  private _wheelListener(event: WheelEvent) {\n    if (this._isTooltipVisible()) {\n      const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n      const element = this._elementRef.nativeElement;\n\n      // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n      // won't fire if the user scrolls away using the wheel without moving their cursor. We\n      // work around it by finding the element under the user's cursor and closing the tooltip\n      // if it's not the trigger.\n      if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n        this.hide();\n      }\n    }\n  }\n\n  /** Disables the native browser gestures, based on how the tooltip has been configured. */\n  private _disableNativeGesturesIfNecessary() {\n    const gestures = this.touchGestures;\n\n    if (gestures !== 'off') {\n      const element = this._elementRef.nativeElement;\n      const style = element.style;\n\n      // If gestures are set to `auto`, we don't disable text selection on inputs and\n      // textareas, because it prevents the user from typing into them on iOS Safari.\n      if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n        style.userSelect = (style as any).msUserSelect = style.webkitUserSelect =\n            (style as any).MozUserSelect = 'none';\n      }\n\n      // If we have `auto` gestures and the element uses native HTML dragging,\n      // we don't set `-webkit-user-drag` because it prevents the native behavior.\n      if (gestures === 'on' || !element.draggable) {\n        (style as any).webkitUserDrag = 'none';\n      }\n\n      style.touchAction = 'none';\n      style.webkitTapHighlightColor = 'transparent';\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_hideDelay: NumberInput;\n  static ngAcceptInputType_showDelay: NumberInput;\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    'class': 'mat-tooltip-trigger'\n  }\n})\nexport class MatTooltip extends _MatTooltipBase<TooltipComponent> {\n  protected readonly _tooltipComponent = TooltipComponent;\n\n  constructor(\n    overlay: Overlay,\n    elementRef: ElementRef<HTMLElement>,\n    scrollDispatcher: ScrollDispatcher,\n    viewContainerRef: ViewContainerRef,\n    ngZone: NgZone,\n    platform: Platform,\n    ariaDescriber: AriaDescriber,\n    focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) scrollStrategy: any,\n    @Optional() dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS) defaultOptions: MatTooltipDefaultOptions,\n    @Inject(DOCUMENT) _document: any) {\n\n    super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber,\n      focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n  }\n}\n\n@Directive()\nexport abstract class _TooltipComponentBase implements OnDestroy {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number | undefined;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number | undefined;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<void> = new Subject();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    clearTimeout(this._hideTimeoutId);\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = undefined;\n      this._onShow();\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    clearTimeout(this._showTimeoutId);\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = undefined;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide;\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this._showTimeoutId);\n    clearTimeout(this._hideTimeoutId);\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.io/design/components/tooltips.html#behavior\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Callback for when the timeout in this.show() gets completed.\n   * This method is only needed by the mdc-tooltip, and so it is only implemented\n   * in the mdc-tooltip, not here.\n   */\n  protected _onShow(): void {}\n}\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent extends _TooltipComponentBase {\n  /** Stream that emits whether the user has a handset-sized display.  */\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    private _breakpointObserver: BreakpointObserver) {\n    super(changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {\n  MatTooltip,\n  TooltipComponent,\n  MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './tooltip';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatTooltipModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tooltip-module';\nexport * from './tooltip';\nexport * from './tooltip-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}